2022-04-03 14:19:19,274 ERROR: Exception on /prediction [GET] [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py:1455]
Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 3621, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 142, in pandas._libs.index.IndexEngine.get_loc
TypeError: '(slice(None, None, None), 1)' is an invalid key

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1525, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1523, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1509, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\routes.py", line 67, in predict
    data["predictions"] = preds[:, 1]
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 3628, in get_loc
    self._check_indexing_error(key)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 5637, in _check_indexing_error
    raise InvalidIndexError(key)
pandas.errors.InvalidIndexError: (slice(None, None, None), 1)
2022-04-03 14:20:24,273 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:46]
2022-04-03 14:20:42,373 ERROR: Exception on /prediction [GET] [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py:1455]
Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 3621, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 142, in pandas._libs.index.IndexEngine.get_loc
TypeError: '(slice(None, None, None), 1)' is an invalid key

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1525, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1523, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1509, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\routes.py", line 67, in predict
    data["predictions"] = preds[:, 1]
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 3628, in get_loc
    self._check_indexing_error(key)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\pandas\core\indexes\base.py", line 5637, in _check_indexing_error
    raise InvalidIndexError(key)
pandas.errors.InvalidIndexError: (slice(None, None, None), 1)
2022-04-03 14:21:45,416 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:46]
2022-04-03 14:22:00,938 ERROR: Exception on /prediction [GET] [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py:1455]
Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1525, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1523, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1509, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\routes.py", line 72, in predict
    return jsonify(data)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\json\__init__.py", line 297, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\json\__init__.py", line 131, in dumps
    return _json.dumps(obj, **kwargs)
  File "C:\Users\dndav\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 234, in dumps
    return cls(
  File "C:\Users\dndav\AppData\Local\Programs\Python\Python38\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\dndav\AppData\Local\Programs\Python\Python38\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\json\__init__.py", line 50, in default
    return super().default(o)
  File "C:\Users\dndav\AppData\Local\Programs\Python\Python38\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
2022-04-03 14:24:13,103 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:46]
2022-04-03 14:24:29,594 ERROR: Exception on /prediction [GET] [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py:1455]
Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\routes.py", line 63, in predict
    preds = model.predict(df)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\model\datapipeline.py", line 28, in predict
    preds = pd.DataFrame(self.__pipeline.predict(X), columns=[self.target])
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda>
    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\pipeline.py", line 470, in predict
    return self.steps[-1][1].predict(Xt, **predict_params)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\ensemble\_forest.py", line 971, in predict
    X = self._validate_X_predict(X)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict
    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\base.py", line 566, in _validate_data
    X = check_array(X, **check_params)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\utils\validation.py", line 800, in check_array
    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1525, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1523, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\venv\lib\site-packages\flask\app.py", line 1509, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\routes.py", line 65, in predict
    data["predictions"] = "Error: ".join(e)
TypeError: can only join an iterable
2022-04-03 14:50:25,735 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:32]
2022-04-03 15:00:46,314 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:30]
2022-04-03 15:01:08,434 INFO: app startup [in D:\DEV\PythonUdemy\PychermProjects\SuicidPrevention\app\__init__.py:30]
